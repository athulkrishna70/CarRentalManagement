@page "/models/"
@using CarRentalManagement.Client.Static;
@using CarRentalManagement.Shared.Domain;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.JSInterop;
@using System.Net.Http.Json;
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Car Models</h3>
@if (Models == null)
{
	<div class="alert alert-info">Loading models...</div>
}
else
{
	<table class="table table-responsive">
		<thread>
			<tr>
				<th>Name</th>
				<th>Actions</th>
			</tr>
		</thread>
		<tbody>
			@foreach (var model in Models)
			{
				<tr>
					<td>@model.Name</td>
					<td>
						<a href="/makes/view/@model.Id" class="btn btn-primary">
							<span class="oi oi-book"></span>
						</a>
						<a href="/makes/edit/@model.Id" class="btn btn-warning">
							<span class="oi oi-pencil"></span>
						</a>
						<button class="btn btn-danger" @onclick="@(()=>Delete(model.Id))">
							<span class="oi oi-delete"></span>
						</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
}
@code {
	private List<model>? Models;
	protected async override Task OnInitializedAsync()
	{
		Models = await _client.GetFromJsonAsync<List<model>>($"{Endpoints.ModelsEndpoint}");
	}
	async Task Delete(int modelId)
	{
		if (Models != null)
		{
			var model = Models.First(q => q.Id == modelId);
			var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {model.Name}?");
			if (confirm)
			{
				await _client.DeleteAsync($"{Endpoints.ModelsEndpoint}/{modelId}");
				await OnInitializedAsync();
			}
		}
	}
}
